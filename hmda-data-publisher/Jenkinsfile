podTemplate(label: 'buildSbtPod', containers: [
  containerTemplate(name: 'sbt', image: 'jenkinsxio/builder-scala', ttyEnabled: true, command: 'cat'),
  containerTemplate(name: 'docker', image: 'docker', ttyEnabled: true, command: 'cat'),
  containerTemplate(name: 'helm', image: 'alpine/helm', ttyEnabled: true, command: 'cat')
],
volumes: [
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
]) {
  node('buildSbtPod') {
      
    library identifier: "hmdaUtils@jenkinsSharedLibraries", retriever: modernSCM (
        [
            $class: 'GitSCMSource',
            remote: 'https://github.cfpb.gov/kgudel/hmda-devops.git'
        ]
    )
    
    init.setEnvironment('hmda_data_publisher')
    init.checkForChanges('hmda-data-publisher')

    stage('Build Scala Code and Generate Dockerfile') {
      container('sbt') {
        sh "sbt -batch hmda-data-publisher/docker:stage"
      }
    }

    stage('Build And Publish Docker Image') {
      container('docker') {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub',
          usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASSWORD']]) {
          withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'hmda-platform-jenkins-service',
            usernameVariable: 'DTR_USER', passwordVariable: 'DTR_PASSWORD']]) {
            withCredentials([string(credentialsId: 'internal-docker-registry', variable: 'DOCKER_REGISTRY_URL')]){
              dockerBuild.sbtBuild('hmda-data-publisher')
              security.dockerImageScan('hmda-data-publisher', env.DOCKER_TAG)
            }
          }
        }
      }
    }

    stage('Deploy') {
      if (env.DEPLOY.toBoolean()) {
        container('helm') {
          helm.deploy('hmda-data-publisher')
        }
      }
    }

    stage('Docker Clean Up') {
      container('docker') {
        dockerBuild.clean()
      }
    } 

  }
}
