akka {
  actor {
    deployment {
      /publication {
        dispatcher = publication-dispatcher
      }
    }
  }
}

hmda {
  actor {
    timeout = 5
  }
  publication {
    fetchsize = 100
    aws {
      access-key-id = ""
      access-key-id = ${?AWS_ACCESS_KEY_ID}
      secret-access-key = ""
      secret-access-key = ${?AWS_SECRET_ACCESS_KEY}
      public-bucket = "hmda-public"
      public-bucket = ${?S3_PUBLIC_BUCKET}
      region = "us-east-1"
      region = ${?AWS_REGION}
    }
  }

}

publication-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}