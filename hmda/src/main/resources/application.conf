include "persistence.conf"
include "hmda.conf"
include "cors.conf"
include "edits.conf"

akka {

  diagnostics {
    starvation-detector {
      check-interval = 1s
      initial-delay = 30s
      max-delay-warning-threshold = 100 ms
      warning-interval = 10 seconds
    }
  }

  blocking-quality-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 32
    }
    throughput = 1
  }

  loglevel = info
  log-dead-letters = off
  log-dead-letters-during-shutdown = off

  http.parsing.max-content-length = 1G
  http.server.default-host-header = "cfpb.gov"

  discovery.method = akka-dns
  io.dns.resolver = async-dns

  actor {
    provider = "cluster"
  }

  cluster {
    failure-detector.threshold = 12
    metrics.enabled = off
  }

  remote {
    maximum-payload-bytes = 30000000 bytes
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
      port = ${?APP_PORT}
      message-frame-size =  30000000b
      send-buffer-size =  30000000b
      receive-buffer-size =  30000000b
      maximum-frame-size = 30000000b

      bind-hostname = 0.0.0.0
      bind-port = 2551
      bind-port = ${?APP_PORT}
    }
  }


  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
      port = ${?MANAGEMENT_PORT}

      bind-hostname = 0.0.0.0
      bind-port = 8558
      bind-port = ${?MANAGEMENT_PORT}
    }
  }

}


cinnamon.application = "hmda-platform"

cinnamon.akka {
  // monitor all actors
  // see https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka/akka.html
  actors {
    "hmda.*" {
      report-by = class
    }
  }

  // monitor the named-example stream that we have explicitly instrumented
  // see https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka-streams/akka-streams.html
  streams {
    "hmda.*" {
      report-by = name
    }
  }

  // monitor akka http paths
  // see https://developer.lightbend.com/docs/telemetry/current/instrumentations/akka-http/akka-http-configuration.html#example-configuration-1
  http {
    servers {
      "*:*" {
        paths {
          "*" {
            metrics = on
          }
        }
      }
    }
  }
}
// expose the HTTP metrics server that Prometheus will scrape to gather metrics
cinnamon.prometheus {
  http-server {
    port = 9009
    daemon = false
  }

  // runs on port 9009
  exporters += http-server
}

rules {
  quarterly-filing {
    // institutions can perform quarterly filings when current year >= start-year
    start-year = 2020
    start-year = ${?RULES_QF_START_YEAR}

    q1 {
      start = "November 12"
      start = ${?RULES_QF_Q1_START}

      end = "November 14"
      end = ${?RULES_QF_Q1_END}

      enabled = true
      enabled = ${?RULES_QF_Q1_ENABLED}
    }

    q2 {
      start = "July 01"
      start = ${?RULES_QF_Q2_START}

      end = "September 30"
      end = ${?RULES_QF_Q2_END}

      enabled = false
      enabled = ${?RULES_QF_Q2_ENABLED}
    }

    q3 {
      start = "October 01"
      start = ${?RULES_QF_Q3_START}

      end = "December 31"
      end = ${?RULES_QF_Q3_END}

      enabled = false
      enabled = ${?RULES_QF_Q3_ENABLED}
    }
  }

  filing-years-allowed = "2018"
  filing-years-allowed = ${?RULES_QF_FILING_YEARS_ALLOWED}
}