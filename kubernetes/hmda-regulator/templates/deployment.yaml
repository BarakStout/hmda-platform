apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "hmda-regulator.fullname" . }}
  labels:
    app: {{ template "hmda-regulator.name" . }}
    chart: {{ template "hmda-regulator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "hmda-regulator.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hmda-regulator.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: CASSANDRA_CLUSTER_HOSTS
            valueFrom:
              configMapKeyRef:
                name: cassandra-configmap
                key: cassandra-hosts
          - name: CASSANDRA_CLUSTER_USERNAME
            valueFrom:
              secretKeyRef:
                name: cassandra-credentials
                key: cassandra.username
          - name: CASSANDRA_CLUSTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cassandra-credentials
                key: cassandra.password
          - name: AWS_ACCESS_KEY_ID
            secretKeyRef:
              name: s3-credentials
              key: aws-access-key
          - name: AWS_SECRET_ACCESS_KEY
            secretKeyRef:
              name: s3-credentials
              key: aws-secret-access-key
          - name: AWS_ENVIRONMENT
            configMapKeyRef:
              name: Å¡3-configmap
              key: aws-environment
          - name: S3_PUBLIC_BUCKET
            configMapKeyRef:
              name: s3-configmap
              key: s3-public-bucket
          - name: AWS_REGION
            configMapKeyRef:
              name: s3-configmap
              key: aws-region
          ports:
            - name: {{ .Values.service.name }}
              containerPort: 9099
              protocol: {{ .Values.service.protocol }}
            - name: {{ .Values.grpc.name }}
              containerPort: 60082
              protocol: {{ .Values.service.protocol }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
