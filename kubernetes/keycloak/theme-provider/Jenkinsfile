podTemplate(label: 'providerBuild', containers: [
  containerTemplate(name: 'docker', image: 'docker', ttyEnabled: true, command: 'cat')
],
volumes: [
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
]) {
   node('providerBuild') {
     init.setEnvironment('theme_provider')

    stage('Build And Publish Docker Image') {
      container('docker') {
        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'dockerhub',
          usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASSWORD']]) {
          withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'hmda-platform-jenkins-service',
            usernameVariable: 'DTR_USER', passwordVariable: 'DTR_PASSWORD']]) {
            withCredentials([string(credentialsId: 'internal-docker-registry', variable: 'DOCKER_REGISTRY_URL')]){
              dockerBuild.sbtBuild('theme-provider')
              security.dockerImageScan('theme-provider', env.DOCKER_TAG)
              dockerBuild.clean()
            }
          }
        }
      }
    }
  }

}
