apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "institutions-api.fullname" . }}
  labels:
    app: {{ template "institutions-api.name" . }}
    chart: {{ template "institutions-api.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "institutions-api.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "institutions-api.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-inst-api-config"
                  key: instapi.postgres_host
            - name: PG_DATABASE
              value: "{{ .Values.postgresql.postgresDatabase }}"
            - name: PG_USER
              value: "{{ .Values.postgresql.postgresUser }}"
            - name: PG_PASSWORD
              value: "{{ .Values.postgresql.postgresPassword }}"
          ports:
            - name: {{ .Values.service.name }}
              containerPort: 9092
              protocol: {{ .Values.service.protocol }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
