akka {
  loglevel = "INFO"
  loglevel = ${?HMDA_LOGLEVEL}
  actor {
    warn-about-java-serializer-usage = on
    serializers {
      institutionViewState = "hmda.query.serialization.InstitutionViewProtobufSerializer"
      filingViewState = "hmda.query.serialization.HmdaFilingViewProtobufSerializer"
    }
    serialization-bindings {
      "hmda.query.view.institutions.InstitutionView$InstitutionViewState" = institutionViewState
      "hmda.query.view.filing.HmdaFilingView$FilingViewState" = filingViewState
    }
  }
}

akka.cluster.metrics.enabled = off

hmda {
  journal.snapshot.counter = 100
  query {
    fetch.size = 32
    group.size = 1000
  }
}

//TODO: configure database access for Keycloak
//db {
//  driver = "slick.driver.PostgresDriver$"
//
//  db {
//    url = "jdbc:postgresql://192.168.99.100:54321/hmda?user=postgres&password=postgres"
//    url = ${?JDBC_URL}
//    driver = org.postgresql.Driver
//    numThreads = 2
//  }
//}

cassandra {
  host = "192.168.99.100"
  host = ${?CASSANDRA_CLUSTER_HOSTS}
  port = 9042
  port = ${?CASSANDRA_CLUSTER_PORT}
  keyspace = "hmda_query"
  keyspace = ${?CASSANDRA_QUERY_KEYSPACE}
  username = ""
  username = ${?CASSANDRA_CLUSTER_USERNAME}
  password = ""
  password = ${?CASSANDRA_CLUSTER_PASSWORD}
  retries = 60
  retry-interval = 1000
}

query-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}


