akka {
  loglevel = "INFO"
  actor {
    warn-about-java-serializer-usage = on
    serializers {
      institution = "hmda.persistence.serialization.institutions.InstitutionProtobufSerializer"
      submission = "hmda.persistence.serialization.submission.SubmissionProtobufSerializer"
      filing = "hmda.persistence.serialization.filing.FilingProtobufSerializer"
      parser = "hmda.persistence.serialization.parser.HmdaFileParserProtobufSerializer"
      larValidated = "hmda.persistence.serialization.validation.LarValidatedProtobufSerializer"
      upload = "hmda.persistence.serialization.upload.UploadProtobufSerializer"
    }
    serialization-bindings {
      "hmda.persistence.messages.events.institutions.InstitutionEvents$InstitutionCreated" = institution
      "hmda.persistence.messages.events.institutions.InstitutionEvents$InstitutionModified" = institution
      "hmda.persistence.messages.events.institutions.FilingEvents$FilingCreated" = filing
      "hmda.persistence.messages.events.institutions.FilingEvents$FilingStatusUpdated" = filing
      "hmda.persistence.messages.events.institutions.SubmissionEvents$SubmissionCreated" = submission
      "hmda.persistence.messages.events.institutions.SubmissionEvents$SubmissionStatusUpdated" = submission
      "hmda.persistence.messages.events.processing.CommonHmdaValidatorEvents$LarValidated" = larValidated
      "hmda.persistence.messages.events.processing.FileUploadEvents$LineAdded" = upload
      "hmda.persistence.messages.events.processing.FileUploadEvents$FileNameAdded" = upload
      "hmda.persistence.messages.events.processing.HmdaFileParserEvents$TsParsed" = parser
      "hmda.persistence.messages.events.processing.HmdaFileParserEvents$TsParsedErrors" = parser
      "hmda.persistence.messages.events.processing.HmdaFileParserEvents$LarParsed" = parser
      "hmda.persistence.messages.events.processing.HmdaFileParserEvents$LarParsedErrors" = parser
    }
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb {
        dir = "target/journal"
        native = false
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local {
        dir = "target/snapshots"
      }
    }
    query {
      journal {
        id = "akka.persistence.query.journal.leveldb"
      }
    }
  }
}


hmda {
  actor-lookup-timeout = 5
  persistent-actor-timeout = 60
  isDemo = true
}